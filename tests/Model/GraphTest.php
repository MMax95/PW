<?php

/**
 * PW GRAPH
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * This is a sample server graph server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\Graph;

/**
 * GraphTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\Graph
 */
class GraphTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Graph"
     */
    public function testGraph()
    {
        $testGraph = new Graph();
        $namespacedClassname = Graph::getModelsNamespace() . '\\Graph';
        $this->assertSame('\\' . Graph::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        $this->markTestIncomplete(
            'Test of "Graph" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "graphID"
     */
    public function testPropertyGraphID()
    {
        $this->markTestIncomplete(
            'Test of "graphID" property in "Graph" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "parameters"
     */
    public function testPropertyParameters()
    {
        $this->markTestIncomplete(
            'Test of "parameters" property in "Graph" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "views"
     */
    public function testPropertyViews()
    {
        $this->markTestIncomplete(
            'Test of "views" property in "Graph" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "defaultView"
     */
    public function testPropertyDefaultView()
    {
        $this->markTestIncomplete(
            'Test of "defaultView" property in "Graph" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = Graph::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}
